version: "3"

services:
  drf_app:
    build:
      context: ../
      dockerfile: app.Dockerfile
    container_name: AndroxineBackendDjango
    depends_on:
      db:
        condition: service_healthy
      celery_redis_broker:
        condition: service_started
    restart: always

  db:
    image: postgres:15
    container_name: AndroxineBackendPostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d androxine_db -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1111
      - POSTGRES_DB=androxine_db
    restart: always

  celery_redis_broker:
    image: redis:alpine
    container_name: AndroxineBackendRedisBroker
    expose:
      - 6379
    restart: always

  celery_worker:
    build:
      context: ../
      dockerfile: app.Dockerfile
    command: ../scripts/celery_worker.sh
    container_name: AndroxineBackendCeleryWorker
    restart: always
    depends_on:
      - celery_redis_broker

  # elasticsearch:
  #   image: elasticsearch:8.14.0
  #   container_name: AndroxineBackendElasticsearch

volumes:
  postgres_data:
